name: oio-sds
version: v2.0

workflow:
  root:
    pipeline: oio-sds-root
    application: oio-sds

  tests-fast:
    pipeline: oio-sds-test-fast
    environment: oio-sds-env-test-fast
    application: oio-sds
    depends_on:
      - root
    conditions:
      check:
        - variable: cds.triggered_by.username
          operator: ne
          value: "cds.scheduler"

  tests-single:
    pipeline: oio-sds-test-functional
    application: oio-sds
    environment: oio-sds-env-single
    depends_on:
      - root
    conditions:
      check:
        - variable: cds.triggered_by.username
          operator: ne
          value: "cds.scheduler"

  tests-cli:
    pipeline: oio-sds-test-functional
    application: oio-sds
    environment: oio-sds-env-cli
    depends_on:
      - tests-fast
    conditions:
      check:
        - variable: cds.triggered_by.username
          operator: ne
          value: "cds.scheduler"

  tests-3copies:
    pipeline: oio-sds-test-functional
    application: oio-sds
    environment: oio-sds-env-3copies
    depends_on:
      - tests-fast
    conditions:
      check:
        - variable: cds.triggered_by.username
          operator: ne
          value: "cds.scheduler"

  tests-ec:
    pipeline: oio-sds-test-functional
    application: oio-sds
    environment: oio-sds-env-ec
    depends_on:
      - root

  coverage:
    pipeline: oio-sds-coverage
    depends_on:
      - tests-cli
      - tests-fast
      - tests-single
      - tests-3copies
      - tests-ec
    when:
      - success

  mirror:
    pipeline: oio-sds-mirror
    application: oio-sds
    depends_on:
      - root

  build:
    pipeline: oio-sds-build
    application: oio-sds
    depends_on:
      - root
    conditions:
      check:
        - variable: cds.triggered_by.username
          operator: ne
          value: "cds.scheduler"

metadata:
  default_tags: git.branch,git.author,git.tag

retention_policy: return (git_branch_exist == "false" and run_days_before < 2) or run_days_before < 365

notifications:
  - type: vcs
    settings:
      on_success: always

hooks:
  root:
    - type: Scheduler
      config:
        # once very hour
        cron: "7 * * * *"
        timezone: UTC
